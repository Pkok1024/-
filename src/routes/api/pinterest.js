async function a(a,r){a.json({"status":"Success","code":200,"author":author,"data":r})}import r from"express";import*as s from"../../scrape/index.js";import e from"../../middlewares/apiKeyMiddleware.js";const t=r.Router();t.get("/:path",e,(async(r,e)=>{const t=r.path;try{switch(t){case"/getBoard":await async function(r,e){const t={"id":r.query.id,"slashurl":r.query.slashurl,"bookmark":r.query.bookmark},o=await s.getBoard(t);await a(e,o)}(r,e);break;case"/searchBoards":await async function(r,e){const t=r.query.query,o=r.query.bookmark,n=await s.searchBoards(t,o);await a(e,n)}(r,e);break;case"/searchPins":await async function(r,e){const t=r.query.query,o=r.query.bookmark,n=await s.searchPins(t,o);await a(e,n)}(r,e);break;case"/suggestions":await async function(r,e){const t=r.query.id,o=r.query.bookmark,n=await s.suggestions(t,o);await a(e,n)}(r,e);break;default:e.status(404).json({"error":"Path not found"})}}catch(a){console.error("Internal server error:",a),e.status(500).json({"error":"Internal server error"})}}));export default t;