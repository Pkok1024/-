async function t(t){return new Promise(((r,a)=>{o(`${t}`,{"method":"get"}).then((t=>t.text())).then((o=>{const a=e.load(o,{"xmlMode":!1}),m=a('meta[property="og:title"]').attr("content"),h=a('meta[property="og:duration"]').attr("content"),i=a('meta[property="og:image"]').attr("content"),l=a('meta[property="og:video:type"]').attr("content"),p=a('meta[property="og:video:width"]').attr("content"),n=a('meta[property="og:video:height"]').attr("content"),d=a("span.metadata").text().trim(),c=a("#video-player-bg > script:nth-child(6)").html(),s={"low":(c.match("html5player.setVideoUrlLow\\('(.*?)'\\);")||[])[1],"high":c.match("html5player.setVideoUrlHigh\\('(.*?)'\\);")[1],"HLS":c.match("html5player.setVideoHLS\\('(.*?)'\\);")[1],"thumb":c.match("html5player.setThumbUrl\\('(.*?)'\\);")[1],"thumb69":c.match("html5player.setThumbUrl169\\('(.*?)'\\);")[1],"thumbSlide":c.match("html5player.setThumbSlide\\('(.*?)'\\);")[1],"thumbSlideBig":c.match("html5player.setThumbSlideBig\\('(.*?)'\\);")[1]};r({"status":!0,"title":m,"URL":t,"duration":h,"image":i,"videoType":l,"videoWidth":p,"videoHeight":n,"info":d,"files":s})})).catch((t=>a({"status":!1,"result":t})))}))}import e from"cheerio";import o from"node-fetch";export default t;